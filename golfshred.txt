(define "SetHiddenEach"  
   (set Hidden What #1 to:P2)  (set Hidden What #1 to:P3)  (set Hidden What #1 to:P4)
   (set Hidden What #2 to:P1)  (set Hidden What #2 to:P3)  (set Hidden  What #2 to:P4)
   (set Hidden What #3 to:P1)  (set Hidden What #3 to:P2)  (set Hidden What #3 to:P4)
   (set Hidden What #4 to:P1)  (set Hidden What #4 to:P2)  (set Hidden What #4 to:P3)              
)

(define "Tally"
    (if (= #1 13) 0 (if (or (= #1 11) (= #1 12)) 10 #1))

)

//------------------------------------------------------------------------------

(game "Golf" 
    (players 4) 
    (equipment { 
        (board (rectangle 1 54)) 
        (piece "Square1"   Shared)
        (piece "Square2"   Shared)
        (piece "Square3"   Shared)
        (piece "Square4"   Shared)
        (piece "Square5"   Shared)
        (piece "Square6"   Shared)
        (piece "Square7"   Shared)
        (piece "Square8"   Shared)
        (piece "Square9"   Shared)
        (piece "Square10"  Shared)
        (piece "Square11"  Shared)
        (piece "Square12"  Shared)
        (piece "Square13"  Shared)
        (piece "Square14"  Shared)
        (piece "Square15"  Shared)
        (hand Each size:4) 
        })   
                
            
            
            (rules
                (start {
                (place Random (sites (union {(array {0..25}) (array {28..53})})) 
                  {"Square1"  "Square2"  "Square3"  "Square4"  "Square5" 
                   "Square6"  "Square7"  "Square8"  "Square9"  "Square10"
                   "Square11" "Square12" "Square13"
                   "Square1"  "Square2"  "Square3"  "Square4"  "Square5" 
                   "Square6"  "Square7"  "Square8"  "Square9"  "Square10"
                   "Square11" "Square12" "Square13"
                   "Square1"  "Square2"  "Square3"  "Square4"  "Square5" 
                   "Square6"  "Square7"  "Square8"  "Square9"  "Square10"
                   "Square11" "Square12" "Square13"
                   "Square1"  "Square2"  "Square3"  "Square4"  "Square5" 
                   "Square6"  "Square7"  "Square8"  "Square9"  "Square10"
                   "Square11" "Square12" "Square13"
                   })
                (place "Square14" 27)
                (place "Square15" 26)
                  (forEach Player (set Hidden What (sites (union (array {0..25}) (array {28..53}))) to:Player))
                  (forEach Player (set Hidden What (sites (array {28 29})) to:Player))
            (set Hidden What (sites Hand P1) to:P2)
            (set Hidden What (sites Hand P1) to:P3)
            (set Hidden What (sites Hand P1) to:P4)
            (set Hidden What (sites Hand P2) to:P1)
            (set Hidden What (sites Hand P2) to:P3)
            (set Hidden What (sites Hand P2) to:P4)
            (set Hidden What (sites Hand P3) to:P1)
            (set Hidden What (sites Hand P3) to:P2)
            (set Hidden What (sites Hand P3) to:P4)
            (set Hidden What (sites Hand P4) to:P1)            
            (set Hidden What (sites Hand P4) to:P2)            
            (set Hidden What (sites Hand P4) to:P3)            
                })

                phases:{
                (phase "Deal" 
                    (play 
                        (move Pass (then 
                           (forEach Value min:0 max:3 
                              (fromTo (from (+ (+ 30 (value)) (* 4 (count Turns)))) 
                                             (to (handSite Mover (value))) 
                                             (then (set Hidden What at:(last To) False to:Mover))))))  
                    ) (nextPhase (= (count Turns) 4) "Play")
                )                
                (phase "Play" 
                    (play
                        (or 
                            (move Select 
                                (from (sites Hand Mover))
                                (then (remove (last From) (then (fromTo (from (count Turns)) (to (last From)))))))
                            (move Select (from 26) (then (set Var "Knock" (count Turns))))
                        )
                    )
                    (end {(if (or (and (> (var "Knock") 0) (< 15 (count Turns))) (< 24 (count Turns))) 
                            (byScore {(score P1 (+ {("Tally" (what at:54)) ("Tally" (what at:55)) ("Tally" (what at:56)) ("Tally" (what at:57))}))
                                    (score P2 (+ {("Tally" (what at:58)) ("Tally" (what at:59)) ("Tally" (what at:60)) ("Tally" (what at:61))}))
                                    (score P3 (+ {("Tally" (what at:62)) ("Tally" (what at:63)) ("Tally" (what at:64)) ("Tally" (what at:65))}))
                                    (score P4 (+ {("Tally" (what at:66)) ("Tally" (what at:67)) ("Tally" (what at:68)) ("Tally" (what at:69))}))} misere:True))}
                    )
                )
            }
        )
)    
        
//------------------------------------------------------------------------------        
        
        (metadata    
            (graphics {
                (piece Foreground "Square1"  image:"A"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square2"  image:"2"    fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.6)
                (piece Foreground "Square3"  image:"3"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square4"  image:"4"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square5"  image:"5"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square6"  image:"6"    fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.6)
                (piece Foreground "Square7"  image:"7"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square8"  image:"8"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square9"  image:"9"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square10" image:"1"    fillColour:(colour Hidden) edgeColour:(colour Black)  scale:0.4 offsetX:-0.4)
                (piece Foreground "Square10" image:"0"    fillColour:(colour Hidden) edgeColour:(colour Black)  scale:0.4 offsetX:0.4)
                (piece Foreground "Square11" image:"J"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square12" image:"Q"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square13" image:"K"    fillColour:(colour Hidden) edgeColour:(colour Black)   scale:0.6)
                (piece Foreground "Square14" image:"None" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.6)
                (piece Foreground "Square15" image:"Null" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.6)
                (show Edges Hidden)                                                  
                (show Symbol "Hexagon" (sites Board) fillColour:(colour 185 130 85) edgeColour:(colour 225 182 130)) 
                (board Placement scale:35) //35
                (stackType None)
                (hiddenImage "Null")
                (board Background image:"square.svg" fillColour:(colour 185 130 85) edgeColour:(colour 185 130 85) scale:1.45)
            })
        )




