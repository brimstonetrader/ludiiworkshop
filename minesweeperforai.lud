(define "Nbors"
    (count Sites 
        in:(intersection 
            (sites Around #1) 
            (sites Occupied by:P1 if:(> 10 (what at:(site)))) 
        )
    )
)

//------------------------------------------------------------------------------

(game "Minesweeper" 
    (players 1) 
    (equipment { 
        (board (square <Version:size>)) 
        (piece "Flag"   P1)
        (piece "Bomb"   P1)
        (piece "Square"    Shared)  (piece "Square1"   Shared)  (piece "Square2"   Shared)
        (piece "Square3"   Shared)  (piece "Square4"   Shared)  (piece "Square5"   Shared)
        (piece "Square6"   Shared)  (piece "Square7"   Shared)  (piece "Square8"   Shared)
        (piece "Square9"   Shared)  (piece "Square10"  Shared)  (piece "Square11"  Shared)
        (piece "Square12"  Shared)  (piece "Square13"  Shared)  (piece "Square14"  Shared)
        (piece "Square15"  Shared)  (piece "Square16"  Shared)  (piece "Square17"  Shared)
        (piece "Square18"  Shared)  (piece "Square19"  Shared)  (piece "Square20"  Shared)
        (piece "Square21"  Shared)  (piece "Square22"  Shared)  (piece "Square23"  Shared)
        (piece "Square24"  Shared)  (piece "Square25"  Shared)  (piece "Square26"  Shared)
        (piece "Square27"  Shared)  (piece "Square28"  Shared)  (piece "Square29"  Shared)
        (piece "Square30"  Shared)  (piece "Square31"  Shared)  (piece "Square32"  Shared)
        (piece "Square33"  Shared)  (piece "Square34"  Shared)  (piece "Square35"  Shared)
        (piece "Square36"  Shared)  (piece "Square37"  Shared)  (piece "Square38"  Shared)
        (piece "Square39"  Shared)  (piece "Square40"  Shared)  (piece "Square41"  Shared)
        (piece "Square42"  Shared)  (piece "Square43"  Shared)  (piece "Square44"  Shared)
        (piece "Square45"  Shared)  (piece "Square46"  Shared)  (piece "Square47"  Shared)
        (piece "Square48"  Shared)  (piece "Square49"  Shared)  (piece "Square50"  Shared)
        (piece "Square51"  Shared)  (piece "Square52"  Shared)  (piece "Square53"  Shared)
        (piece "Square54"  Shared)  (piece "Square55"  Shared)  (piece "Square56"  Shared)
        (piece "Square57"  Shared)  (piece "Square58"  Shared)  (piece "Square59"  Shared)
        (piece "Square60"  Shared)  (piece "Square61"  Shared)  (piece "Square62"  Shared)
        (piece "Square63"  Shared)  (piece "Square64"  Shared)  (piece "Square65"  Shared)
        (piece "Square66"  Shared)  (piece "Square67"  Shared)  (piece "Square68"  Shared)
        (piece "Square69"  Shared)  (piece "Square70"  Shared)  (piece "Square71"  Shared)
        (piece "Square72"  Shared)  (piece "Square73"  Shared)  (piece "Square74"  Shared)
        (piece "Square75"  Shared)  (piece "Square76"  Shared)  (piece "Square77"  Shared)
        (piece "Square78"  Shared)  (piece "Square79"  Shared)  (piece "Square80"  Shared)
        (piece "Square81"  Shared)  (piece "Square82"  Shared)  (piece "Square83"  Shared)
        (piece "Square84"  Shared)  (piece "Square85"  Shared)  (piece "Square86"  Shared)
        (piece "Square87"  Shared)  (piece "Square88"  Shared)  (piece "Square89"  Shared)
        (piece "Square90"  Shared)  (piece "Square91"  Shared)  (piece "Square92"  Shared)
        (piece "Square93"  Shared)  (piece "Square94"  Shared)  (piece "Square95"  Shared)
        (piece "Square96"  Shared)  (piece "Square97"  Shared)  (piece "Square98"  Shared)
        (piece "Square99"  Shared)  (piece "Square100"  Shared)
        (hand P1 size:1)
    }) 
    
    (rules
        (start {
            (place "Flag" 100)
            (place Random (sites (array {0..99}))
                              {"Square1"   "Square2"   "Square52"  "Square3"   "Square4"   "Square5"   
                               "Square6"   "Square7"   "Square8"   "Square9"   "Square10"  "Square11"  
                               "Square12"  "Square13"  "Square14"  "Square15"  "Square16"  "Square17"  
                               "Square18"  "Square19"  "Square20"  "Square21"  "Square22"  "Square23"  
                               "Square24"  "Square25"  "Square26"  "Square27"  "Square28"  "Square29"  
                               "Square30"  "Square31"  "Square32"  "Square33"  "Square34"  "Square35"  
                               "Square36"  "Square37"  "Square38"  "Square39"  "Square40"  "Square41"  
                               "Square42"  "Square43"  "Square44"  "Square45"  "Square46"  "Square47"  
                               "Square48"  "Square49"  "Square50"  "Square51"  "Square52"  "Square53"    
                               "Square54"  "Square55"  "Square56"  "Square57"  "Square58"  "Square59"  
                               "Square60"  "Square61"  "Square62"  "Square63"  "Square64"  "Square65"  
                               "Square66"  "Square67"  "Square68"  "Square69"  "Square70"  "Square71"  
                               "Square72"  "Square73"  "Square74"  "Square75"  "Square76"  "Square77"  
                               "Square78"  "Square79"  "Square80"  "Square81"  "Square82"  "Square83"  
                               "Square84"  "Square85"  "Square86"  "Square87"  "Square88"  "Square89"  
                               "Square90"  "Square91"  "Square92"  "Square93"  "Square94"  "Square95"  
                               "Square96"  "Square97"  "Square98"  "Square99"  "Square100"})
            (set Hidden (sites Board) to:P1)
        }) 
        
        (play 
            (or 
                (move (from (sites Hand Mover)) 
                    (to (sites Board)) copy:True stack:True
                )
                (move Select 
                    (from (sites Board)) 
                    (then 
                        (if (< (what at:(last From)) 10) 
                            (set Var 1 
                            (then (set Hidden 
                              (forEach (sites Board) if:(> 10 (what at:(site)))) False to:P1)))
                            (add (piece "Square") (to (last From)) 
                                (then (set Value at:(last To) ("Nbors" (last To))))
                            )
                        )
                    )
                ) 
                (then (if (= ("Nbors" (last To)) 0) (add (piece "Square") (to 
                    (forEach (sites Around (last To) Adjacent) if:(= ("Nbors" (site)) 0)))))
                )
            )
        )    
        
        (end {
            (if (= 
                    (^ <Version:size> 2) 
                    (count Sites in:(union (sites Occupied by:P1 component:"Bomb")  
                    (sites Occupied by:P1 component:"Square")))
                ) 
            (result Mover  Win)) 
            (if (= (var) 1) (result Mover Loss))
        })
    )
)

//------------------------------------------------------------------------------

(option "Grid Size" <Version> args:{<size>} {
    
    (item "7x7" 
        <7>
        ""
    )
    
    (item "10x10" 
        <10>
        ""
    )
    
    (item "15x15" 
        <15>
        ""
    )
    
    (item "25x25" 
        <25>
        ""
    )
})

(option "Bomb Density" <Board> args:{<rate>} {
    
    (item "10%"
        <2>
        ""
    )
    
    (item "15%"
        <3>
        ""
    )
    
    (item "20%"
        <4>
        ""
    )
    
    (item "25%"
        <5>
        ""
    )
    
    (item "30%"
        <6>
        ""
    )
})

//------------------------------------------------------------------------------

(metadata
    
    (info
        {
        (description "Minesweeper is a logic puzzle video game genre generally played on personal computers. The game features a grid of clickable squares, with hidden \"mines\" scattered throughout the board.")
        (rules "In the game, mines are scattered throughout a board, which is divided into cells. Cells have three states: unopened, opened, and flagged. An unopened cell is blank and clickable, while an opened cell is exposed. Flagged cells are unopened cells marked by the player to indicate a potential mine location.
            
            A player selects a cell to open it. If a player opens a mined cell, the game ends in a loss. Otherwise, the opened cell displays either a number, indicating the number of mines diagonally and/or adjacent to it, or a blank tile, and all adjacent non-mined cells will automatically be opened. Players can also flag a cell, visualised by a flag being put on the location, to denote that they believe a mine to be in that place. Flagged cells are still considered unopened, and may be unflagged.
            
        The player wins in opening all non-mined cells.")
        (id "4197")
        (source "<a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>")
        (version "1.3.12")
        (classification "puzzle/planning")
        (credit "Noah Morris")
        (date "1990")
        }
    )
    
    (graphics {
        (stackType None)
        (piece Foreground value:1  image:"1" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:2  image:"2" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:3  image:"3" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:4  image:"4" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:5  image:"5" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:6  image:"6" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:7  image:"7" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
        (piece Foreground value:8  image:"8" fillColour:(colour Hidden) edgeColour:(colour Black) scale:0.4)
}))
