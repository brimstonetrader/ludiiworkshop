(define "LargestGroupCascading"
    (max (intersection (difference (sizes Group #1) (sizes Group #2)) 
                                    (sizes Group #1)))         
)

(define "DoScore"
  (if (and {(> (var "LOO") 0) 
            (is Pattern {F    F L L F L    F L L F    F}) 
			(= (var "PHasScored") 0)})
	(if (all Groups if:(and (is Mover (who at:(to))) (is Pattern {F        F L L F L       F L L F        F})))
      (remove (sites)) (then (addScore P1 (var "LOO") 
	    (then (set Var "PHasScored" 1 
	    (then (set Var "LOO" 0)))))))
    (if (and {(> (var "FFF") 0) (is Pattern {F    F    F    F}) (= (var "PHasScored") 0)})
		(if (all Groups if:(and (is Mover (who at:(to))) (is Pattern {F        F       F        F})))
          (remove (sites)) (then (addScore P1 (var "FFF") 
			(then (set Var "PHasScored" 1 
		    (then (set Var "FFF" 0)))))))
		(if (and {(> (var "LRL") 0) (or (is Pattern {F   L F   R F   L F}) (is Pattern {F   R F   L F   R F})) (= (var "PHasScored") 0)})
		  (if (all Groups if:(and (is Mover (who at:(to))) (is Pattern {F        F       F        F})))
            (remove (sites)) (then (addScore P1 (var "FFF") 
		  	(then (set Var "PHasScored" 1 
		      (then (set Var "LRL" 0)))))))
          (if (and {(> (var "LFR") 0) (is Pattern {F   L F   F   R F}) (= (var "PHasScored") 0)})
		    (if (all Groups if:(and (is Mover (who at:(to))) (is Pattern {F        F       F        F})))
              (remove (sites)) (then (addScore P1 (var "FFF") 
		    	(then (set Var "PHasScored" 1 
		        (then (set Var "LRL" 0)))))))			  
			
			
			
			
			))
)


//  1                      
//  1       22                     5        
//  1        2     333      44     55       666 
//  1        2       3      44      5        6 
//  1     ,  2  ,    3   ,   4  ,   5    ,   6
//                                                  
//  7                                                 
// 77              9       AA       BB       C              
//  7       888    999      AA     BB       CCC                
//  7     , 8 8 ,    9   ,   A  ,   B    ,   C   
//
// _|   e, r, rr, rrr, s, rs, rrs, rrrs  
// FFF  1  0   1    0  1   0    1     0   1  ->  4
// FFL  1  0   0    0  0   0    0     0   2  ->  1
// FLF  1  0   0    0  0   1    0     0   3  ->  2
// FLL  1  0   0    0  0   0    0     0   4  ->  1
// FLR  1  0   0    0  0   0    0     0   5  ->  1
// FOF  1  0   0    0  1   0    0     0   6  ->  2
// FOL  1  0   0    0  0   0    0     0   7  ->  1
// LFL  1  0   0    0  1   0    0     0   8  ->  2
// LFR  1  0   1    0  0   0    0     0   9  ->  2
// LRL  1  0   0    0  0   1    0     0   A  ->  2
// LOR  1  0   0    0  0   0    0     0   B  ->  1
// LOO  1  1   1    1  1   1    1     1   C  ->  8

//------------------------------------------------------------------------------

(game "Oswald" 
    (players 2) 
    (equipment { 
        (board (square 8))
        (piece "Marker" Each ("StepToEmpty"))
    }) 
    (rules
        (start (set Score Each 0))   

	phases:{
		(phase "FirstMove"
			(play 
				(move Add (to (sites Empty)) 
				(then (and {
						(set Var "FFL" 1)
						(set Var "FLL" 1)
						(set Var "FLR" 1)
						(set Var "FOL" 1)
						(set Var "LOR" 1)
						(set Var "FLF" 2)
						(set Var "FOF" 2)
						(set Var "LFL" 2)
						(set Var "LFR" 2)
						(set Var "LRL" 2)
						(set Var "FFF" 3)
						(set Var "LOO" 5)
						(set Var "PHasScored" 0)}))))
			(nextPhase "General")
		)
		(phase "General"
			(play 
			  (or 
				(move Add (to (sites Empty)) (then (if (> (max (sizes Group Mover)) 4) 
													"DoScore")))
				(forEach Piece               (then (if (> (max (sizes Group Mover)) 4) 
													 "DoScore"))))
		    ) (end
                (if (> (score Mover) 11)
                    (result Mover Win))
              )
	    )
	 	   }
    )
)


//------------------------------------------------------------------------------

(metadata 

(info
    {
    (description "Catchup is played on an empty 5x5 hexagonal board.")
    (rules "GROUP - A connected chain of friendly stones.
            TURN - Initially, Black drops one stone, then for the remaining turns players drop one or two stones of either color. If one makes a group larger than the previously largest group on their turn, their opponent may place up to three stones.
            GOAL - After the board is full, the player with the largest group wins. If there's a tie, the next largest group is scored, and so on. Draws are impossible")
    (id "1804")
    (source "<a href=\"http://www.di.fc.ul.pt/~jpn/gv/product.htm\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />www.di.fc.ul.pt</a>")
    (version "1.3.11")
    (classification "board/space/group")
    (author "Nick Bentley")
    (credit "Noah Morris")
    (date "2011")
    }
)

(graphics
    (show Score)
)

(ai
    "Catchup_ai"
)
)


//------------------------------------------------------------------------------

(metadata 

(info
    {
    (description "Catchup is played on an empty 5x5 hexagonal board.")
    (rules "GROUP - A connected chain of friendly stones.
            TURN - Initially, Black drops one stone, then for the remaining turns players drop one or two stones of either color. If one makes a group larger than the previously largest group on their turn, their opponent may place up to three stones.
            GOAL - After the board is full, the player with the largest group wins. If there's a tie, the next largest group is scored, and so on. Draws are impossible")
    (id "1804")
    (source "<a href=\"http://www.di.fc.ul.pt/~jpn/gv/product.htm\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />www.di.fc.ul.pt</a>")
    (version "1.3.11")
    (classification "board/space/group")
    (author "Nick Bentley")
    (credit "Noah Morris")
    (date "2011")
    }
)

(ai
    "Catchup_ai"
)
)


